services:
  graph:
    build:
      context: .
    ports:
      - "8001:8000"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/healthcheck')",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:${NEO4J_PORT}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - PORT=8000

  mcp-server:
    build:
      context: ./mcp_server
      dockerfile: Dockerfile
    ports:
      - "8002:8000" # MCP Server with SSE endpoint
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/sse --max-time 5 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:${NEO4J_PORT:-7687}
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - MODEL_NAME=${MODEL_NAME:-gpt-4o-mini}
      - PATH=/root/.local/bin:${PATH}
    restart: unless-stopped
    command: ["uv", "run", "server_wrapper.py"]

  neo4j:
    image: neo4j:5.26.2
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474/ || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 10s
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}

volumes:
  neo4j_data:
